{"version":3,"file":"base/hpv24.base.css","mappings":"AACE;;;;EAAA;;ACQF;;;;;;EAAA;;AAOA;EACE;AAHF;;AAKC;EACC;EACA;EACA;EACA;AAFF;;AAMA;ECoQM,mBALI;ADjQV;;AASE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AANJ;;AAUA;EACE;EACA;AAPF;;AAWE;EACE;EACA;AARJ;;AAWE;EACE;EACA;AATJ;;AAaA;EACE;AAVF;;AAcA;;;EAGE;AAXF;;AAgBE;;;EAGE;AAbJ;;AAiBI;;;EAGE;AAfN;;AAoBA;;;;;;;;;;;;EAYE;AAjBF;;AAqBA;EACE;AAlBF;;AAyBA;EACE;EACA;AAtBF;;AAwBA;EACE;AArBF;;AAwBA;EACE;EACA;AArBF;;AAwBA;EACE;AArBF;;AAwBE;EACE;EACA;EACA;AArBJ;;AAwBA;EACE;AArBF;;AAwBA;EACE;EACA;EACA;EACA;AArBF;;AAwBA;EACE;EACA;EACA;EACA;EACA;AArBF;;AAsBE;EACE;EACA;AApBJ;;AAuBA;EAAU;EACR;AAnBF;;AAqBA;EACE;AAlBF;;AAoBA;EACE;AAjBF;;AAoBA;EACE;AAjBF;;AAmBA;EACE;AAhBF;;AAmBA;EACI;EACA;EACA;AAhBJ","sources":["webpack:///./node_modules/bootstrap/scss/mixins/_banner.scss","webpack:///./scss/base/hpv24.base.scss","webpack:///./node_modules/bootstrap/scss/vendor/_rfs.scss"],"sourcesContent":["@mixin bsBanner($file) {\n  /*!\n   * Bootstrap #{$file} v5.3.3 (https://getbootstrap.com/)\n   * Copyright 2011-2024 The Bootstrap Authors\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   */\n}\n","\n                @use \"sass:color\";\n                @use \"sass:math\";\n              \n@import \"../defaults\";   // Global defaults.\n\n// hpv24 Base Global styling.\n// -----------------------------------------------------------------------------\n\n/* Temp fix for:\n * Issue #3233533: Core .placeholder class conflicts with new Bootstrap .placeholder class\n * https://www.drupal.org/project/drupal/issues/3233533\n * \n * Issue #3246827: Fix em.placeholder style from Bootstrap 5 base styling with the Drupal core placeholder\n * https://www.drupal.org/i/3246827\n */\nbody{\n  background: #f5f5f5;\n}\n em.placeholder {\n  cursor: unset !important;\n  vertical-align: unset !important;\n  opacity: unset !important;\n  background-color: unset !important;\n}\n\n// Have a margin between field groups in forms.\n.form-group {\n  @include margin-bottom(1rem);\n}\n\n// Have a style form required fieldset, HTML input elements for fields.\n.form-required {\n\n  &::after {\n    content: '';\n    vertical-align: super;\n    display: inline-block;\n    background-image: url(../../images/required.svg);\n    background-repeat: no-repeat;\n    background-size: calc(#{$input-height} * .16666666666) calc(#{$input-height} * .16666666666);\n    width: calc(#{$input-height} * .16666666666);\n    height: calc(#{$input-height} * .16666666666);\n    margin: 0 0.3em;\n  }\n}\n\n.ajax-progress {\n  background-color: transparent !important;\n  border: 0 !important;\n}\n\n.ajax-progress-throbber {\n  .throbber {\n    background-color: transparent !important;\n    border: 0 !important;\n  }\n\n  .message {\n    background-color: transparent !important;\n    border: 0 !important;\n  }\n}\n\n.ajax-progress-fullscreen {\n  background-color: transparent !important;\n}\n\n// Hide for anonymous users.\n.hidden-anonymous,\n.visible-admin,\n.visible-logged-in {\n  display: none !important;\n}\n\n// Show only for logged in users.\nbody.user-logged-in {\n  .visible-admin,\n  .visible-logged-in,\n  .hidden-anonymous {\n    display: inline-block !important;\n  }\n\n  .btn {\n    .visible-admin,\n    .visible-logged-in,\n    .hidden-anonymous {\n      display: inline-block !important;\n    }\n  }\n}\n\nh1,\n.h1,\nh2,\n.h2,\nh3,\n.h3,\nh4,\n.h4,\nh5,\n.h5,\nh6,\n.h6 {\n  text-transform: capitalize;\n}\n\n// Change Underline offset for inline links.\na {\n  text-underline-offset: 0.25em;\n}\n\n\n\n\n\n.card-header{\n  border-bottom: none;\n  border-radius: 1em;\n}\n.card-header:first-child{\n  background: #fff;\n}\n\nform#webform-submission-online-consult-add-form{\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.progress-title {\n  display: none;\n}\n.progress-marker{\n  &::before{\n    border-radius: 0.3rem !important;\n    width: 95%;\n    font-size: 1px;\n  }\n}\n.progress-title{\n  display: none;\n}\n\n.js-form-wrapper{\n  background: white;\n  border-radius: 10px ;\n  padding: 20px;\n  box-shadow: 0 0 #0000, 0 0 #0000, 0 0 10px rgba(0,0,0,6%);\n\n}\n.js-form-item.form-item.js-form-type-radio {\n  line-height: 1.5em;\n  background: #a6de9b;\n  padding: 20px;\n  border-radius: 2em;\n  color: #325343;\n  &:hover{\n    background-color: #397a4a;\n    color: #fff;\n  }\n}\n.mb-3{    margin-bottom: 1rem !important;\n  background: #fffcf6;\n}\n.progress-step.is-active .progress-marker::before {\n  background-color: #325343;\n}\n.webform-progress-tracker .progress-step.is-active:hover .progress-marker::before {\n  background-color: #325343;\n}\n\n.webform-progress-tracker .progress-step:not(.is-active) , .webform-progress-tracker .progress-step:hover .progress-marker::before {\n  background-color: #dce2da;\n}\n.webform-progress-tracker .progress-step .progress-marker::after{\n  display: none;\n}\n\n.btn-primary {\n    background: #397a4a;\n    border-radius: 0.3rem;\n    border-color: #397a4a;\n}\n","// stylelint-disable scss/dimension-no-non-numeric-values\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  @if $dividend == 0 {\n    @return 0;\n  }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\";\n  }\n  $remainder: $dividend;\n  $result: 0;\n  $factor: 10;\n  @while ($remainder > 0 and $precision >= 0) {\n    $quotient: 0;\n    @while ($remainder >= $divisor) {\n      $remainder: $remainder - $divisor;\n      $quotient: $quotient + 1;\n    }\n    $result: $result * 10 + $quotient;\n    $factor: $factor * .1;\n    $remainder: $remainder * 10;\n    $precision: $precision - 1;\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\n      $result: $result + 1;\n    }\n  }\n  $result: $result * $factor * $sign;\n  $dividend-unit: unit($dividend);\n  $divisor-unit: unit($divisor);\n  $unit-map: (\n    \"px\": 1px,\n    \"rem\": 1rem,\n    \"em\": 1em,\n    \"%\": 1%\n  );\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\n    $result: $result * map-get($unit-map, $dividend-unit);\n  }\n  @return $result;\n}\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query () {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query () {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + \" \" + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\n      } @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + \" \" + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    } @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + \" \" + $value;\n      } @else {\n        // Remove unit from $value for calculations\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + \" calc(\" + $min-width + if($value < 0, \" - \", \" + \") + $variable-width + \")\";\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluid-val: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluid-val {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluid-val);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $fluid-val, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n"],"names":[],"sourceRoot":""}